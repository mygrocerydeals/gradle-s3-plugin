plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version "${gradlePluginPublishVersion}"
    id 'idea'
    id 'groovy'
    id 'com.github.ben-manes.versions' version "${versionsPluginVersion}"
}

wrapper {
    gradleVersion = gradleWrapperVersion
}

group = 'gradle.plugin.com.mgd.core'
version = mgdLibVersion
sourceCompatibility = JavaVersion.VERSION_1_8

jar {
    manifest {
        attributes([
                'Manifest-Version': '1.0',
                'Build-Tag'       : "$buildTag"
        ])
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
    api group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: amazonAWSVersion

    testImplementation group: 'org.spockframework', name: 'spock-core', version: spockVersion
    testImplementation group: 'org.assertj', name: 'assertj-core', version: assertJVersion
}

gradlePlugin {
    website = 'https://github.com/mygrocerydeals/gradle-s3-plugin/blob/master/README.md'
    vcsUrl = 'https://github.com/mygrocerydeals/gradle-s3-plugin'
    plugins {
        s3Plugin {
            id = 'com.mgd.core.gradle.s3'
            displayName = 'Gradle S3 Plugin'
            description = 'Lightweight S3 upload and download plugin'
            tags.set(['aws', 's3'])
            implementationClass = 'com.mgd.core.gradle.S3Plugin'
        }
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(groovy-[0-9.]+)?(-r|-jre)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {

    checkForGradleUpdate = true

    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

task updateReadme {
    ant.replaceregexp(match:"id 'com.mgd.core.gradle.s3' version '\\d+\\.\\d+\\.\\d+'", replace:"id 'com.mgd.core.gradle.s3' version '${mgdLibVersion}'",
            flags:'g', byline:true) {
        fileset(dir: '.', includes: 'README.md')
    }
}

test {
    useJUnitPlatform {}
}

// Gradle task dependencies
assemble.dependsOn updateReadme
